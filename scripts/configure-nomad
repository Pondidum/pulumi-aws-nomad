#!/bin/bash

set -euo pipefail;

readonly SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
readonly SCRIPT_NAME="$(basename "$0")"

log() {

  local readonly level="$1"
  local readonly message="$2"
  local readonly timestamp=$(date +"%Y-%m-%d %H:%M:%S")

  >&2 echo -e "${timestamp} [${level}] [$SCRIPT_NAME] ${message}"
}

function assert_not_empty {
  local -r arg_name="$1"
  local -r arg_value="$2"

  if [[ -z "$arg_value" ]]; then
    log "ERROR" "The value for '$arg_name' cannot be empty"
    print_usage
    exit 1
  fi
}

copy_configuration() {
  local -r bastion_ip="$1"
  local -r nomad_ip="$2"
  local -r config_path="$3"

  local -r via_bastion="ProxyCommand ssh ubuntu@$bastion_ip -W %h:%p"

  scp -o "StrictHostKeyChecking no" -o "$via_bastion" -r "$config_path/nomad" "ubuntu@$nomad_ip:/tmp/configure"
}

configure_nomad() {
  local -r bastion_ip="$1"
  local -r nomad_ip="$2"

  local -r via_bastion="ProxyCommand ssh ubuntu@$bastion_ip -W %h:%p"

  ssh -o "StrictHostKeyChecking no" -o "$via_bastion" "ubuntu@$nomad_ip" <<"EOF"

sudo rm ~/.vault-token

export NOMAD_ADDR="https://127.0.0.1:4646"
export VAULT_ADDR=$(/opt/vault/bin/find-vault)

vault login -method=aws role="nomad-server"

/tmp/configure/configure.sh

rm -rf /tmp/configure

EOF

}

run() {
  local config_path="$SCRIPT_DIR/../configuration"
  local nomad_ip=""
  local bastion_ip=""

  while [[ $# -gt 0 ]]; do
    local key="$1"

    case "$key" in
      --config-path)
        assert_not_empty "$key" "$2"
        config_path="$2"
        shift
        ;;
      --bastion-ip)
        bastion_ip="$2"
        shift
        ;;
      --nomad-ip)
        nomad_ip="$2"
        shift
        ;;
      *)
        log "ERROR" "Unrecognized argument: $key"
        exit 1
        ;;
    esac

    shift
  done

  assert_not_empty "--bastion-ip" "$bastion_ip"
  assert_not_empty "--nomad-ip" "$nomad_ip"

  log "INFO" "Configuring Nomad on $nomad_ip via bastion on $bastion_ip"

  copy_configuration "$bastion_ip" "$nomad_ip" "$config_path"
  configure_nomad "$bastion_ip" "$nomad_ip"
}

run "$@"