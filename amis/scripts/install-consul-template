#!/bin/bash

set -euo pipefail

readonly SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
readonly SYSTEM_BIN_DIR="/usr/local/bin"

readonly DEFAULT_INSTALL_PATH="/opt/template"
readonly DEFAULT_TEMPLATE_USER="consul-template"
readonly DOWNLOAD_PACKAGE_PATH="/tmp/template.zip"

function log {
  local -r level="$1"
  local -r message="$2"
  local -r timestamp=$(date +"%Y-%m-%d %H:%M:%S")
  >&2 echo -e "${timestamp} [${level}] ${message}"
}

function assert_not_empty {
  local -r arg_name="$1"
  local -r arg_value="$2"

  if [[ -z "$arg_value" ]]; then
    log "ERROR" "The value for '$arg_name' cannot be empty"
    exit 1
  fi
}

function user_exists {
  local -r username="$1"
  id "$username" >/dev/null 2>&1
}

function create_template_user {
  local -r username="$1"

  if $(user_exists "$username"); then
    log "INFO" "User $username already exists. Will not create again."
  else
    log "INFO" "Creating user named $username"
    sudo useradd "$username"
  fi
}

function create_template_install_paths {
  local -r path="$1"
  local -r username="$2"

  log "INFO" "Creating install dirs for Consul-Template at $path"
  sudo mkdir -p "$path"
  sudo mkdir -p "$path/bin"
  sudo mkdir -p "$path/config"
  sudo mkdir -p "$path/templates"

  log "INFO" "Changing ownership of $path to $username"
  sudo chown -R "$username:$username" "$path"
}

function fetch_binary {
  local -r version="$1"
  local download_url="https://releases.hashicorp.com/consul-template/${version}/consul-template_${version}_linux_amd64.zip"

  log "INFO" "Downloading Consul to $DOWNLOAD_PACKAGE_PATH"

  curl -o "$DOWNLOAD_PACKAGE_PATH" "$download_url" --location --silent --fail --show-error

}

function install_binary {
  local -r install_path="$1"
  local -r username="$2"

  local -r bin_dir="$install_path/bin"
  local -r consul_dest_path="$bin_dir/consul-template"
  local -r run_consul_dest_path="$bin_dir/run-consul-template"

  unzip -d /tmp "$DOWNLOAD_PACKAGE_PATH"

  log "INFO" "Moving Consul-Template binary to $consul_dest_path"
  sudo mv "/tmp/consul-template" "$consul_dest_path"
  sudo chown "$username:$username" "$consul_dest_path"
  sudo chmod a+x "$consul_dest_path"

  local -r symlink_path="$SYSTEM_BIN_DIR/consul-template"
  if [[ -f "$symlink_path" ]]; then
    log "INFO" "Symlink $symlink_path already exists. Will not add again."
  else
    log "INFO" "Adding symlink to $consul_dest_path in $symlink_path"
    sudo ln -s "$consul_dest_path" "$symlink_path"
  fi

  log "INFO" "Copying Consul run script to $run_consul_dest_path"
  sudo cp "$SCRIPT_DIR/run-consul-template" "$run_consul_dest_path"
  sudo chown "$username:$username" "$run_consul_dest_path"
  sudo chmod a+x "$run_consul_dest_path"
}

run() {

  local version=""
  local path="$DEFAULT_INSTALL_PATH"
  local user="$DEFAULT_TEMPLATE_USER"

  while [[ $# -gt 0 ]]; do
    local key="$1"

    case "$key" in
      --version)
        assert_not_empty "$key" "$2"
        version="$2"
        shift
        ;;
      --path)
        path="$2"
        shift
        ;;
      --user)
        user="$2"
        shift
        ;;
      *)
        log "ERROR" "Unrecognized argument: $key"
        exit 1
        ;;
    esac

    shift
  done

  log "INFO" "Starting Consul Template install"

  create_template_user "$user"
  create_template_install_paths "$path" "$user"

  fetch_binary "$version"
  install_binary "$path" "$user"

  if command -v consul-template; then
    log "INFO" "Consul Template install complete!"
  else
    log "INFO" "Couldn't find consul-template command. Aborting.";
    exit 1
  fi
}

run "$@"

# run --version 0.25.1